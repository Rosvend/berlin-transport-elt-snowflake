# Berlin Transport Data Pipeline Configuration

# API Configuration
api:
  base_url: "https://v6.bvg.transport.rest"
  endpoints:
    departures: "/stops/{stop_id}/departures"
    stops: "/stops"
  rate_limit:
    requests_per_minute: 100
    backoff_factor: 0.3
  timeout: 30

# Target BVG Stops for Data Collection
target_stops:
  # Major stations for comprehensive coverage
  - id: "900000100003"  # S+U Alexanderplatz
    name: "S+U Alexanderplatz"
    type: "major_hub"
  - id: "900000003201"  # S+U Potsdamer Platz
    name: "S+U Potsdamer Platz"
    type: "major_hub"
  - id: "900000024101"  # S+U Friedrichstr.
    name: "S+U Friedrichstr."
    type: "major_hub"
  - id: "900000100001"  # S+U Zoologischer Garten
    name: "S+U Zoologischer Garten"
    type: "major_hub"
  - id: "900000100004"  # S Hackescher Markt
    name: "S Hackescher Markt"
    type: "regional_hub"

# Data Storage Configuration
storage:
  # Local development using MinIO
  local:
    type: "minio"
    endpoint: "minio:9000"
    bucket: "bvg-transport-data"
    paths:
      raw: "raw/departures"
      staging: "staging/departures"
      processed: "processed/departures"
  
  # Production S3 configuration (for future cloud deployment)
  aws:
    type: "s3"
    bucket: "bvg-transport-prod"
    region: "eu-central-1"
    paths:
      raw: "raw/departures"
      staging: "staging/departures"
      processed: "processed/departures"

# Snowflake Configuration
snowflake:
  # Connection details (use environment variables for sensitive data)
  database: "BVG_TRANSPORT"
  warehouse: "COMPUTE_WH"
  schema_raw: "RAW"
  schema_staging: "STAGING"
  schema_marts: "MARTS"
  
  # Table configurations
  tables:
    raw_departures: "departures_raw"
    staging_departures: "departures_clean"
    mart_delays: "delays_by_stop"
    mart_busyness: "busyness_per_hour"

# Airflow DAG Configuration
airflow:
  # DAG settings
  dag_settings:
    schedule_interval: "*/5 * * * *"  # Every 5 minutes
    start_date: "2024-01-01"
    catchup: false
    max_active_runs: 1
    retries: 3
    retry_delay_minutes: 2
  
  # Task configurations
  tasks:
    extract:
      timeout_minutes: 10
      pool: "default_pool"
    
    load_raw:
      timeout_minutes: 15
      pool: "default_pool"
    
    transform:
      timeout_minutes: 20
      pool: "default_pool"

# Data Quality Configuration
data_quality:
  # Great Expectations settings
  expectations:
    # Row count expectations
    min_rows_per_extraction: 10
    max_rows_per_extraction: 10000
    
    # Data freshness (in minutes)
    max_data_age_minutes: 10
    
    # Required columns
    required_columns:
      - "stop_id"
      - "stop_name"
      - "line_name"
      - "direction"
      - "planned_departure"
      - "realtime_departure"
      - "delay_minutes"
      - "extraction_timestamp"
  
  # Validation rules
  validation:
    null_tolerance_percent: 5  # Allow up to 5% null values
    duplicate_tolerance_percent: 1  # Allow up to 1% duplicates

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  handlers:
    - type: "console"
    - type: "file"
      filename: "/opt/airflow/logs/pipeline.log"
      max_bytes: 10485760  # 10MB
      backup_count: 5

# Dashboard Configuration
dashboard:
  refresh_interval_seconds: 300  # 5 minutes
  default_time_range_hours: 24
  max_records_display: 1000
  
  # Chart configurations
  charts:
    delays:
      title: "Average Delays by Stop"
      type: "bar"
      color_scheme: "viridis"
    
    busyness:
      title: "Departures per Hour"
      type: "line"
      color_scheme: "plasma"
    
    realtime_status:
      title: "Real-time Data Coverage"
      type: "gauge"
      thresholds:
        good: 90
        warning: 70
        critical: 50

# Development and Testing
development:
  # Sample data for testing
  sample_size: 100
  mock_api: false
  
  # Database settings for local development
  use_local_db: false
  local_db_path: "/opt/airflow/data/local.db"

# Monitoring and Alerting
monitoring:
  # Health check endpoints
  health_checks:
    - name: "api_connectivity"
      endpoint: "https://v6.bvg.transport.rest/stops"
      timeout: 10
    
    - name: "snowflake_connectivity"
      query: "SELECT 1"
      timeout: 15
  
  # Alert thresholds
  alerts:
    pipeline_failure: true
    data_quality_failure: true
    high_delay_threshold_minutes: 15
    low_data_volume_threshold: 50